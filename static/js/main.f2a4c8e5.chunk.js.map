{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmali","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","updateEmail","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2a4c8e5.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth();\r\nexport default app;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { auth } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmali(email) {\r\n        return currentUser.updateEmali(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        })\r\n        return unsubscribe;\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmali,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AuthContext.Provider value={value}>\r\n                {!loading && children}\r\n            </AuthContext.Provider>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from './../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Password donot matched\");\r\n        }\r\n\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await signup(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"/\");\r\n        } catch {\r\n            setError(\"Failed to create an account\");\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/login\">Log In</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Card, Button, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from './../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState();\r\n    const { currentUser, logout } = useAuth();\r\n    const history = useHistory();\r\n\r\n    async function handleLogout() {\r\n        setError(\"\");\r\n\r\n        try {\r\n            await logout();\r\n            history.push(\"/login\");\r\n        } catch {\r\n            setError(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email : </strong> {currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from './../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await login(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"./\");\r\n        } catch {\r\n            setError(\"Failed to log in\");\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from './../contexts/AuthContext';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> :\r\n                    <Redirect to=\"/login\" />\r\n            }}\r\n        >\r\n        </Route>\r\n    )\r\n}","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from './../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [error, setError] = useState();\r\n    const [message, setMessage] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setMessage(\"\");\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await resetPassword(emailRef.current.value);\r\n            setMessage(\"Check your inbox for further instructions\")\r\n        } catch {\r\n            setError(\"Failed to reset password\");\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from './../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { currentUser, updateEmail, updatePassword } = useAuth();\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Password donot matched\");\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                history.push(\"/\")\r\n            })\r\n            .catch(() => {\r\n                setError(\"Failed to update account\")\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser.email} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Signup from './Signup';\r\nimport { AuthProvider } from './../contexts/AuthContext';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Router>\r\n            <AuthProvider>\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n                <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n                <Route path=\"/signup\" component={Signup} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n              </Switch>\r\n            </AuthProvider>\r\n          </Router>\r\n        </div>\r\n      </Container>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}